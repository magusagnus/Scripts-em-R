library(Biobase)
library(GEOquery)
library(edgeR)
GSE42023 <- getGEO("GSE42023")
class(GSE42023)
length(GSE42023)
names(GSE42023)
exp_Data <- GSE42023[[1]]
expression_data <- (exprs(exp_Data))               # salva como Matriz
dim(expression_data)
names(pData(exp_Data))
clin_data <- as.data.frame(exp_Data@phenoData@data)
clin_data$group <- "  "
clin_data[clin_data$`tumor type:ch1`== 'non-habits associated tongue tumor',41] <- "non_habits"
clin_data[clin_data$`tumor type:ch1`!= 'non-habits associated tongue tumor',41] <- "habits";
View(clin_data)
group <- as.data.frame(cbind(clin_data$geo_accession,clin_data$group))
colnames(group) <- c('geo_accession', 'group_definition')
View(group)
group <- paste(group$group_definition, sep=",")
group <- factor(group)
table(group)
group
supp_data <- getGEOSuppFiles("GSE42023")
rownames(supp_data) <- basename(rownames(supp_data))
supp_data
tarArchive <- rownames(supp_data)[1]
tarArchive
GPL6883_HumanRef.8_V3_0_R0_11282963_A <- read.delim("~/GSE42023/GPL6883_HumanRef-8_V3_0_R0_11282963_A.csv")
View(GPL6883_HumanRef.8_V3_0_R0_11282963_A)
raw_data <-  GPL6883_HumanRef.8_V3_0_R0_11282963_A
raw_data_edited <- as.data.frame (raw_data [9:25219,1:28])
colnames(raw_data_edited) <- c("Species","Source","Search_Key","Transcript",
"ILMN_Gene","Source_Reference_ID","RefSeq_ID","Unigene_ID","Entrez_Gene_ID",
"GI","Accession","Symbol","Protein_Product","Probe_Id","Array_Address_Id",
"Probe_Type","Probe_Start","Probe_Sequence","Chromosome","Probe_Chr_Orientation",
"Probe_Coordinates","Cytoband","Definition","Ontology_Component","Ontology_Process",
"Ontology_Function","Synonyms","Obsolete_Probe")
View(raw_data_edited)
exprs_non_normalized <- GSE42023_non_normalized
GSE42023_non_normalized <- read.delim("~/GSE42023/GSE42023_non_normalized.txt")
View(GSE42023_non_normalized)
exprs_non_normalized <- GSE42023_non_normalized
exprs_non_normalized <- as.matrix(exprs_non_normalized)
write.table(exprs_non_normalized,"expressao_dadosbrutos",sep = "\t")
exprs_normalized_by_me <- calcNormFactors(exprs_non_normalized)
View(exprs_non_normalized)
expressao_dadosbrutos_teste <- read.delim2("~/Área de Trabalho/R_GIT_HUB/Scripts-em-R/expressao_dadosbrutos")
View(expressao_dadosbrutos_teste)
View(expression_data)
View(exprs_non_normalized)
BiocManager::install("DESeq2")
library(Biobase)
library(GEOquery)
library(edgeR)
GSE42023 <- getGEO("GSE42023")
exp_Data <- GSE42023[[1]]
names(pData(exp_Data))
clin_data <- as.data.frame(exp_Data@phenoData@data)
clin_data$group <- "  "
clin_data[clin_data$`tumor type:ch1`== 'non-habits associated tongue tumor',41] <- "non_habits"
clin_data[clin_data$`tumor type:ch1`!= 'non-habits associated tongue tumor',41] <- "habits";
View(clin_data)
library(Biobase)
library(GEOquery)
library(edgeR)
GSE42023 <- getGEO("GSE42023")
exp_Data <- GSE42023[[1]]
names(pData(exp_Data))
clin_data <- as.data.frame(exp_Data@phenoData@data)
clin_data$group <- "  "
clin_data[clin_data$`tumor type:ch1`== 'non-habits associated tongue tumor',41] <- "non_habits"
clin_data[clin_data$`tumor type:ch1`!= 'non-habits associated tongue tumor',41] <- "habits";
group <- as.data.frame(cbind(clin_data$geo_accession,clin_data$description, clin_data$group))
colnames(group) <- c('geo_accession', 'description','group_definition')
View(group)
group <- paste(group$group_definition, sep=",")
group <- factor(group)
table(group)
group
group
library(Biobase)
library(GEOquery)
library(edgeR)
GSE42023 <- getGEO("GSE42023")
exp_Data <- GSE42023[[1]]
names(pData(exp_Data))
clin_data <- as.data.frame(exp_Data@phenoData@data)
clin_data$group <- "  "
clin_data[clin_data$`tumor type:ch1`== 'non-habits associated tongue tumor',41] <- "non_habits"
clin_data[clin_data$`tumor type:ch1`!= 'non-habits associated tongue tumor',41] <- "habits";
group <- as.data.frame(cbind(clin_data$geo_accession,clin_data$description, clin_data$group))
colnames(group) <- c('geo_accession', 'description','group_definition')
group_1 <- paste(group$group_definition, sep=",")
group_1 <- paste(group$description,group$group_definition, sep=",")
group_1 <- factor(group)
table(group)
group_1 <- paste(group$description,group$group_definition, sep=",")
group_1 <- factor(group_1)
group_test <- as.data.frame(cbind(clin_data$description,clin_data$group))
colnames(group_test) <- c('description','group_definition')
View(group_test)
group_test <- paste(group_test$group_definition,sep = ",")
group_test <- paste(group_test$group_definition,sep = ",")
group_test <- factor(group_test)
table(group_test)
group_test
as.data.frame(group_test)
view <-as.data.frame(group_test)
View(view)
group_test <- as.data.frame(cbind(clin_data$description,clin_data$group))
colnames(group_test) <- c('description','group_definition')
group_test <- paste(group_test$group_definition,sep = ",")
group_test <- factor(group_test)
table(group_test)
group_test
view<- as.data.frame(group_test)
View(view)
View(group)
group2<- as.data.frame(cbind(clin_data$description,clin_data$group))
colnames(group) <- c('description','group_definition')
View(group2)
colnames(group) <- c('description','group_definition')
colnames(group2) <- c('description','group_definition')
View(group2)
group_test <- paste(group2$group_definition,sep = ",")
group_test <- factor(group_test)
table(group_test)
group_test
view<- as.data.frame(group_test)
View(view)
View(group2)
library("pasilla")
BiocManager::install("pasilla")
expressao_dadosbrutos <- read.delim2("~/Área de Trabalho/R_GIT_HUB/Scripts-em-R/Scripts/expressao_dadosbrutos")
View(expressao_dadosbrutos)
rawdata<-expressao_dadosbrutos
View(expressao_dadosbrutos)
raw_1 <-rawdata
View(raw_1)
counts_1<- as.matrix(rawdata ,sep="\t",row.names="ID_REF"))
counts_1<- as.matrix(rawdata ,sep="\t",row.names="ID_REF")
View(counts_1)
View(rawdata)
BiocManager::install("DESeq2")
library(DESeq2)
test_1 <- DESeqDataSetFromMatrix(countData = counts_1,
colData = group,
design = ~ group_test)
test_1 <- DESeqDataSetFromMatrix(countData = counts_1,
design = ~ group_test)
test_1 <- DESeqDataSetFromMatrix(countData = counts_1,
colData = group_test)
test_1 <- DESeqDataSet(rawdata)
View(group2)
show(group2)
rawdata[rawdata$YTY.82T,rawdata$YTY.84T,rawdata$YTO.68T,rawdata$YTY.115T,
rawdata$YTY.96T,rawdata$YTY.94T,rawdata$YTY.81T,rawdata$YTY.78T,
rawdata$YTO.71T,rawdata$YTO.65T] <- "habits"
View(rawdata)
View(rawdata)
rawdata1<-rawdata
View(rawdata)
sum(rawdata)
dim(rawdata)
summary(rawdata)
show(colnames(rawdata))
View(group2)
rawdata1[1:2,4,10,16,18,20,22,32,34,36] <- "habits"
rawdata1[1,2,4,10,16,18,20,22,32,34,36] <- "habits"
View(rawdata1)
library(Biobase)
library(GEOquery)
library(edgeR)
library(limma)
GSE42023 <- getGEO("GSE42023", GSEMatrix = TRUE,AnnotGPL = TRUE)
GSE42023
class(GSE42023)
length(GSE42023)
names(GSE42023)
exp_Data <- GSE42023[[1]]
names(phenoData(exp_Data))
names(phenoData(exp_Data))
View(exp_Data)
clin_data=GSE42023$GSE42023_series_matrix.txt.gz@phenoData@data
clin_data$Group_definition<- "  "
clin_data[clin_data$`tumor type:ch1` == 'non-habits associated tongue tumor',41 ] <- "non_habits"
clin_data[clin_data$`tumor type:ch1` != 'non-habits associated tongue tumor',41] <- "habits";
group <-as.data.frame.array(cbind(clin_data$geo_accession,clin_data$Group_definition))
colnames(group) <- c('geo_accession', 'group_definition')
group <- paste(group$group_definition,sep = ",")
group <- factor (group)
table(group)
group
supp_data <- getGEOSuppFiles("GSE42023")
tarArchive <- rownames(supp_data)[1]
tarArchive
