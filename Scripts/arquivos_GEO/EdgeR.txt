

group <- paste(Design$Status, sep=",")
group <- factor(group)
table(group)
group


#Donwload e Organizalção nos Grupos
FileURL <- paste(
   "http://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE150469",
   "format=file",
   "file=GSE150469_exprs_file_21916x7.txt.gz",
    sep="&")
 download.file(FileURL, "GSE150469_exprs_file_21916x7.txt.gz")

GenewiseCounts <- read.delim("GSE150469_exprs_file_21916x7.txt.gz",
                              row.names="Gene_Symbol")
 colnames(GenewiseCounts) <- substring(colnames(GenewiseCounts),1,7)
 dim(GenewiseCounts)

library(edgeR)
y <- DGEList(GenewiseCounts, group=group,
              genes=GenewiseCounts[,1,drop=FALSE])
options(digits=3)
y$samples

OBS: Pulei a fase de anotação porque o banco que baixei já estava com os símbolos dos genes;

Design matrix -

design <- model.matrix(~0+group)
colnames(design) <- levels(group)
design

keep <- filterByExpr(y, design)
table(keep)

y <- y[keep, , keep.lib.sizes=FALSE]

AveLogCPM <- aveLogCPM(y)
hist(AveLogCPM)

Norm

y <- calcNormFactors(y)
y$samples

PCA

pch <- c(0,1,2,15,16,17)
colors <- rep(c("darkgreen", "red", "blue"), 2)
plotMDS(y, col=colors[group], pch=pch[group])
legend("topleft", legend=levels(group), pch=pch, col=colors, ncol=2)

plotMD(y, column=1)
abline(h=0, col="red", lty=2, lwd=2)

plotMD(y, column=11)
abline(h=0, col="red", lty=2, lwd=2)
OBS: Esse último código deu erro no GSE150469 apesar de funcionar no exemplo, não sei se vai se repetir para outros acessos

Dispersion estimation

y <- estimateDisp(y, design, robust=TRUE)

fit <- glmQLFit(y, design, robust=TRUE)
head(fit$coefficients)

summary(fit$df.prior)

Differential expression analysis

NvsC <- makeContrasts(Normal-Cancer, levels=design)

res <- glmQLFTest(fit, contrast=NvsC)

is.de <- decideTestsDGE(res)
summary(is.de)

plotMD(res, status=is.de)

tr <- glmTreat(fit, contrast=NvsC, lfc=log2(1.5))
topTags(tr)

is.de <- decideTestsDGE(tr)
summary(is.de)

HEATMAP

logCPM <- cpm(y, prior.count=2, log=TRUE)
rownames(logCPM) <- y$gene$Symbol
colnames(logCPM) <- paste(y$samples$group, 1:2, sep="-")

o <- order(tr$table$PValue)
logCPM <- logCPM[o[1:30],]

coolmap(logCPM, margins=c(7,7), lhei=c(1,6), lwid=c(1,3))
OBS: Fica bugado se você pular a etapa da anotação

Analysis of deviance: Pulei porque só tinham 2 grupos

GO:

go <- goana(tr, species="Hs")
topGO(go, n=15)
OBS: Fica bugado se você pular a etapa da anotação

KEGG:
keg <- kegga(tr, species="Hs")
topKEGG(keg, n=15, truncate=34)